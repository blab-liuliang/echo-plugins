/*
 * PROPRIETARY INFORMATION.  This software is proprietary to
 * Side Effects Software Inc., and is not to be reproduced,
 * transmitted, or disclosed in any way without written permission.
 *
 * COMMENTS:
 *	This class lets you read a line with a UT_CmdLineReader while
 *	waiting for events from FS_EventGenerators.
 */

#ifndef __CMD_EvtMonitoringReader_h__
#define __CMD_EvtMonitoringReader_h__

#include "CMD_API.h"

#include <UT/UT_SysClone.h>
#include <UT/UT_ValArray.h>

class UT_CmdLineReader;
class UT_WorkBuffer;
class FS_EventGenerator;
class cmd_PollingEvtGeneratorWrapper;

class CMD_API CMD_EvtMonitoringReader
{
public:

    // The singleton instance of this class will only be created if the
    // static inst() method is called.  When the instance is created,
    // it will register itself as the place where all generators should
    // be installed.
    static CMD_EvtMonitoringReader& inst();

    // Read a line of input using the command line reader into the buffer,
    // processing any events generated by installed event generators.
    // Returns true if a line of input was read.
    enum GetlineResult { SUCCESS, FAILED, INTERRUPTED };
    GetlineResult getline(UT_CmdLineReader &cmdline_reader, UT_WorkBuffer &buf);

private:
    static int installGeneratorCallback(FS_EventGenerator *generator, int mode);
    static void pollEventGeneratorsCallback(bool /*drain_queue*/);

    int		installGenerator(FS_EventGenerator &gen, int mode);
    void	pollEventGenerators();

    CMD_EvtMonitoringReader();

    UT_ValArray<cmd_PollingEvtGeneratorWrapper*> myEventGenerators;
};

#endif

